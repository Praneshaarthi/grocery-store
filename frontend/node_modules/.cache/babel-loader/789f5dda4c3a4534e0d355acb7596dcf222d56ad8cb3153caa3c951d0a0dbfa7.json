{"ast":null,"code":"// server.js\nconst express = require('express');\nconst app = express();\nconst MongoClient = require('mongodb').MongoClient;\nconst bodyParser = require('body-parser');\n\n// Connect to MongoDB\nconst url = 'mongodb+srv://username:password@cluster-name.mongodb.net/database-name';\nMongoClient.connect(url, function (err, client) {\n  if (err) {\n    console.log(err);\n  } else {\n    console.log('Connected to MongoDB');\n    const db = client.db();\n    const collection = db.collection('orders');\n\n    // Middleware to parse JSON bodies\n    app.use(bodyParser.json());\n\n    // API endpoint to save order\n    app.post('/api/orders', (req, res) => {\n      const order = req.body;\n      collection.insertOne(order, (err, result) => {\n        if (err) {\n          console.log(err);\n          res.status(500).send({\n            message: 'Error saving order'\n          });\n        } else {\n          res.send({\n            message: 'Order saved successfully'\n          });\n        }\n      });\n    });\n\n    // Start the server\n    const port = 3001;\n    app.listen(port, () => {\n      console.log(`Server started on port ${port}`);\n    });\n  }\n});","map":{"version":3,"names":["express","require","app","MongoClient","bodyParser","url","connect","err","client","console","log","db","collection","use","json","post","req","res","order","body","insertOne","result","status","send","message","port","listen"],"sources":["C:/Users/Pranesh K/Desktop/grocer-store/frontend/src/components/Order.js"],"sourcesContent":["// server.js\r\nconst express = require('express');\r\nconst app = express();\r\nconst MongoClient = require('mongodb').MongoClient;\r\nconst bodyParser = require('body-parser');\r\n\r\n// Connect to MongoDB\r\nconst url = 'mongodb+srv://username:password@cluster-name.mongodb.net/database-name';\r\nMongoClient.connect(url, function(err, client) {\r\n  if (err) {\r\n    console.log(err);\r\n  } else {\r\n    console.log('Connected to MongoDB');\r\n    const db = client.db();\r\n    const collection = db.collection('orders');\r\n\r\n    // Middleware to parse JSON bodies\r\n    app.use(bodyParser.json());\r\n\r\n    // API endpoint to save order\r\n    app.post('/api/orders', (req, res) => {\r\n      const order = req.body;\r\n      collection.insertOne(order, (err, result) => {\r\n        if (err) {\r\n          console.log(err);\r\n          res.status(500).send({ message: 'Error saving order' });\r\n        } else {\r\n          res.send({ message: 'Order saved successfully' });\r\n        }\r\n      });\r\n    });\r\n\r\n    // Start the server\r\n    const port = 3001;\r\n    app.listen(port, () => {\r\n      console.log(`Server started on port ${port}`);\r\n    });\r\n  }\r\n});"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,GAAG,GAAGF,OAAO,CAAC,CAAC;AACrB,MAAMG,WAAW,GAAGF,OAAO,CAAC,SAAS,CAAC,CAACE,WAAW;AAClD,MAAMC,UAAU,GAAGH,OAAO,CAAC,aAAa,CAAC;;AAEzC;AACA,MAAMI,GAAG,GAAG,wEAAwE;AACpFF,WAAW,CAACG,OAAO,CAACD,GAAG,EAAE,UAASE,GAAG,EAAEC,MAAM,EAAE;EAC7C,IAAID,GAAG,EAAE;IACPE,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;EAClB,CAAC,MAAM;IACLE,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnC,MAAMC,EAAE,GAAGH,MAAM,CAACG,EAAE,CAAC,CAAC;IACtB,MAAMC,UAAU,GAAGD,EAAE,CAACC,UAAU,CAAC,QAAQ,CAAC;;IAE1C;IACAV,GAAG,CAACW,GAAG,CAACT,UAAU,CAACU,IAAI,CAAC,CAAC,CAAC;;IAE1B;IACAZ,GAAG,CAACa,IAAI,CAAC,aAAa,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;MACpC,MAAMC,KAAK,GAAGF,GAAG,CAACG,IAAI;MACtBP,UAAU,CAACQ,SAAS,CAACF,KAAK,EAAE,CAACX,GAAG,EAAEc,MAAM,KAAK;QAC3C,IAAId,GAAG,EAAE;UACPE,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;UAChBU,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YAAEC,OAAO,EAAE;UAAqB,CAAC,CAAC;QACzD,CAAC,MAAM;UACLP,GAAG,CAACM,IAAI,CAAC;YAAEC,OAAO,EAAE;UAA2B,CAAC,CAAC;QACnD;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACA,MAAMC,IAAI,GAAG,IAAI;IACjBvB,GAAG,CAACwB,MAAM,CAACD,IAAI,EAAE,MAAM;MACrBhB,OAAO,CAACC,GAAG,CAAC,0BAA0Be,IAAI,EAAE,CAAC;IAC/C,CAAC,CAAC;EACJ;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}